"use strict";var precacheConfig=[["/react-portfolio/index.html","569ca4c5f27e60f936cc2dd085ed54e9"],["/react-portfolio/static/css/main.26bb629c.css","f4bd42ec29342319715252bdd7e25ef8"],["/react-portfolio/static/js/main.365afdcc.js","12fb87b3d5f4f1e97c7cd5a6409b7b6a"],["/react-portfolio/static/media/Technologies.52510349.scss","52510349138757549787cd85d3ede801"],["/react-portfolio/static/media/budgetApp.969cd577.png","969cd5771a487f0fca70ad1d5f9224b5"],["/react-portfolio/static/media/employeeDirectory.21c94749.png","21c94749eb5e9fecbb76ba53f5870206"],["/react-portfolio/static/media/event.6d0b0472.png","6d0b0472a60b17641d897c185590ce5c"],["/react-portfolio/static/media/firebaseicon.96f0c4ca.png","96f0c4caf9e65f9466d2835407a8afd2"],["/react-portfolio/static/media/fitnessTracker.0c2c1a89.png","0c2c1a890abce80ef73321d3eb29db11"],["/react-portfolio/static/media/healthcare.20216169.png","20216169971d3ec3b8f62f845346c8f1"],["/react-portfolio/static/media/jsicon.36700bee.jpg","36700bee9a1831f2691165d291d62d78"],["/react-portfolio/static/media/mongodb.dff8e0df.png","dff8e0df0170a41110a9a993192c0643"],["/react-portfolio/static/media/notetaker.c6879d5d.png","c6879d5d84dad5e4776e5d0ee703c672"],["/react-portfolio/static/media/pp.b3d2a7fb.jpg","b3d2a7fb3f7f08e1ccd142601cbd2cee"],["/react-portfolio/static/media/quizz.0015ca10.png","0015ca10dd33c4ea7de19bf45039a114"],["/react-portfolio/static/media/reactIcon.6bbb347f.png","6bbb347fdd7aee52f468986e1a1dd8cf"],["/react-portfolio/static/media/redux.4912f6d8.png","4912f6d800e1b75354e0b5d4794e1856"],["/react-portfolio/static/media/rn.21829a0f.png","21829a0f16a823088ccbde8e44fb5485"],["/react-portfolio/static/media/teamGenerator.ce3784bf.png","ce3784bf74da2058a6b1de437603f698"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,r){var n=new URL(e);return r&&n.pathname.match(r)||(n.search+=(n.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),n.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],r=new URL(t,self.location),n=createCacheKey(r,hashParamName,a,/\.\w{8}\./);return[r.toString(),n]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(r){return setOfCachedUrls(r).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return r.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),r="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,r),e=urlsToCacheKeys.has(a));var n="/react-portfolio/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(n,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});